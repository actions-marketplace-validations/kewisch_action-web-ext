require("source-map-support").install(),module.exports=function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=56)}([function(e,t,r){"use strict";r.d(t,"e",function(){return o}),r.d(t,"d",function(){return s}),r.d(t,"a",function(){return a}),r.d(t,"c",function(){return c}),r.d(t,"b",function(){return d}),r.d(t,"g",function(){return u}),r.d(t,"f",function(){return l});var n=r(38),i=r.n(n);class o extends i.a{constructor(e){super(e)}}class s extends o{constructor(e){super(e)}}class a extends s{constructor(e){super(e)}}class c extends o{constructor(e){super(e)}}class d extends o{constructor(e){let t="";for(const[r,n]of e){t+=`\nError on extension loaded from ${r}: ${String(n)}\n`}super(`Reload errors: ${t}`),this.errorsBySourceDir=e}}function u(e,t){return r=>{let n=!0;if(Array.isArray(e)?-1===e.indexOf(r.code)&&-1===e.indexOf(r.errno)||(n=!1):r.code!==e&&r.errno!==e||(n=!1),n)throw r;return t(r)}}function l(e,t){return!(!Array.isArray(e)||-1===e.indexOf(t.code))||t.code===e}},function(e,t){e.exports=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}},function(e,t,r){"use strict";r.r(t),r.d(t,"ConsoleStream",function(){return a}),r.d(t,"consoleStream",function(){return c}),r.d(t,"createLogger",function(){return d});var n=r(1),i=r.n(n),o=r(13),s=r.n(o);class a{constructor({verbose:e=!1}={}){i()(this,"verbose",void 0),i()(this,"isCapturing",void 0),i()(this,"capturedMessages",void 0),this.verbose=e,this.isCapturing=!1,this.capturedMessages=[]}format({name:e,msg:t,level:r}){return`${this.verbose?`[${e}][${o.nameFromLevel[r]}] `:""}${t}\n`}makeVerbose(){this.verbose=!0}write(e,{localProcess:t=process}={}){const r=this.verbose?s.a.TRACE:s.a.INFO;if(e.level>=r){const r=this.format(e);this.isCapturing?this.capturedMessages.push(r):t.stdout.write(r)}}startCapturing(){this.isCapturing=!0}stopCapturing(){this.isCapturing=!1,this.capturedMessages=[]}flushCapturedLogs({localProcess:e=process}={}){for(const t of this.capturedMessages)e.stdout.write(t);this.capturedMessages=[]}}const c=new a;function d(e,{createBunyanLog:t=o.createLogger}={}){return t({name:e.replace(/^src\//,""),level:s.a.TRACE,streams:[{type:"raw",stream:c}]})}},function(e,t){e.exports=require("path")},function(e,t){e.exports=require("mz")},function(e,t){e.exports=require("util")},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return p}),r.d(t,"b",function(){return h});var n=r(3),i=r.n(n),o=r(4),s=r(21),a=r.n(s),c=r(22),d=r.n(c),u=r(0),l=r(2);const f=Object(l.createLogger)(e);async function p(e){const t=i.a.join(e,"manifest.json");let r,n;f.debug(`Validating manifest at ${t}`);try{r=await o.fs.readFile(t,{encoding:"utf-8"})}catch(e){throw new u.a(`Could not read manifest.json file at ${t}: ${e}`)}try{n=a()(d()(r),t)}catch(e){throw new u.a(`Error parsing manifest.json at ${t}: ${e}`)}const s=[];if(n.name||s.push('missing "name" property'),n.version||s.push('missing "version" property'),n.applications&&!n.applications.gecko&&s.push('missing "applications.gecko" property'),s.length)throw new u.a(`Manifest at ${t} is invalid: ${s.join("; ")}`);return n}function h(e){return e.applications?e.applications.gecko.id:void 0}}).call(this,"src/util/manifest.js")},function(e,t){e.exports=require("fs")},function(e,t,r){"use strict";function n(e){return e.isTTY}function i(e,t){e.setRawMode(t)}r.d(t,"a",function(){return n}),r.d(t,"b",function(){return i})},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return u}),r.d(t,"b",function(){return f}),r.d(t,"c",function(){return p});var n=r(1),i=r.n(n),o=r(44),s=r.n(o),a=r(2),c=r(0);const d=Object(a.createLogger)(e),u=6005;class l{constructor(e){i()(this,"client",void 0),i()(this,"checkedForAddonReloading",void 0),this.client=e,this.checkedForAddonReloading=!1,e.client.on("disconnect",()=>{d.debug('Received "disconnect" from Firefox client')}),e.client.on("end",()=>{d.debug('Received "end" from Firefox client')}),e.client.on("message",e=>{d.debug(`Received message from client: ${JSON.stringify(e)}`)})}disconnect(){this.client.disconnect()}addonRequest(e,t){return new Promise((r,n)=>{this.client.client.makeRequest({to:e.actor,type:t},e=>{if(e.error){const r=`${e.error}: ${e.message}`;d.debug(`Client responded to '${t}' request with error:`,r),n(new c.e(r))}else r(e)})})}installTemporaryAddon(e){return new Promise((t,r)=>{this.client.request("listTabs",(n,i)=>n?r(new c.e(`Remote Firefox: listTabs() error: ${n}`)):i.addonsActor?void this.client.client.makeRequest({to:i.addonsActor,type:"installTemporaryAddon",addonPath:e},n=>{if(n.error)return r(new c.e("installTemporaryAddon: Error: "+`${n.error}: ${n.message}`));d.debug(`installTemporaryAddon: ${JSON.stringify(n)}`),d.info(`Installed ${e} as a temporary add-on`),t(n)}):(d.debug("listTabs returned a falsey addonsActor: "+`${i.addonsActor}`),r(new c.c("This is an older version of Firefox that does not provide an add-ons actor for remote installation. Try Firefox 49 or higher."))))})}getInstalledAddon(e){return new Promise((e,t)=>{this.client.request("listAddons",(r,n)=>{r?t(new c.e(`Remote Firefox: listAddons() error: ${r}`)):e(n.addons)})}).then(t=>{for(const r of t)if(r.id===e)return r;throw d.debug(`Remote Firefox has these addons: ${t.map(e=>e.id)}`),new c.e("The remote Firefox does not have your extension installed")})}async checkForAddonReloading(e){if(this.checkedForAddonReloading)return e;{const t=await this.addonRequest(e,"requestTypes");if(-1===t.requestTypes.indexOf("reload")){const e=JSON.stringify(t.requestTypes);throw d.debug(`Remote Firefox only supports: ${e}`),new c.d("This Firefox version does not support add-on reloading. Re-run with --no-reload")}return this.checkedForAddonReloading=!0,e}}async reloadAddon(e){const t=await this.getInstalledAddon(e);await this.checkForAddonReloading(t),await this.addonRequest(t,"reload"),process.stdout.write(`\rLast extension reload: ${(new Date).toTimeString()}`),d.debug("\n")}}async function f(e=u,{connectToFirefox:t=s.a}={}){d.debug(`Connecting to Firefox on port ${e}`);const r=await t(e);return d.debug(`Connected to the remote Firefox debugger on port ${e}`),new l(r)}async function p({maxRetries:e=250,retryInterval:t=120,port:r},{connectToFirefox:n=f}={}){return d.debug("Connecting to the remote Firefox debugger"),async function(){var i;for(let o=0;o<=e;o++)try{return await n(r)}catch(e){if(!Object(c.f)("ECONNREFUSED",e))throw d.error(e.stack),e;await new Promise(e=>{setTimeout(e,t)}),i=e,d.debug(`Retrying Firefox (${o}); connection error: ${e}`)}throw d.debug("Connect to Firefox debugger: too many retries"),i}()}}).call(this,"src/firefox/remote.js")},function(e,t){e.exports=require("firefox-profile")},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return p});var n=r(1),i=r.n(n),o=r(3),s=r.n(o),a=r(40),c=r.n(a),d=r(2);const u=Object(d.createLogger)(e),l=(e,t)=>{const r=s.a.relative(e,t);return!!r&&(".."!==r&&!r.startsWith(`..${s.a.sep}`))};class f{constructor({baseIgnoredPatterns:e=["**/*.xpi","**/*.zip","**/.*","**/.*/**/*","**/node_modules","**/node_modules/**/*"],ignoreFiles:t=[],sourceDir:r,artifactsDir:n}={}){i()(this,"filesToIgnore",void 0),i()(this,"sourceDir",void 0),r=s.a.resolve(r),this.filesToIgnore=[],this.sourceDir=r,this.addToIgnoreList(e),t&&this.addToIgnoreList(t),n&&l(r,n)&&(n=s.a.resolve(n),u.debug(`Ignoring artifacts directory "${n}" `+"and all its subdirectories"),this.addToIgnoreList([n,s.a.join(n,"**","*")]))}resolveWithSourceDir(e){const t=s.a.resolve(this.sourceDir,e);return u.debug(`Resolved path ${e} with sourceDir ${this.sourceDir} `+`to ${t}`),t}addToIgnoreList(e){for(const t of e)if("!"===t.charAt(0)){const e=this.resolveWithSourceDir(t.substr(1));this.filesToIgnore.push(`!${e}`)}else this.filesToIgnore.push(this.resolveWithSourceDir(t))}wantFile(e){const t=this.resolveWithSourceDir(e);return!(c()(t,this.filesToIgnore).length>0)||(u.debug(`FileFilter: ignoring file ${t}`),!1)}}const p=e=>new f(e)}).call(this,"src/util/file-filter.js")},function(e,t){e.exports=require("event-to-promise")},function(e,t){e.exports=require("bunyan")},function(e,t,r){"use strict";r.r(t),function(e){r.d(t,"safeFileName",function(){return v}),r.d(t,"getDefaultLocalizedName",function(){return D}),r.d(t,"defaultPackageCreator",function(){return P}),r.d(t,"default",function(){return O});var n=r(3),i=r.n(n),o=r(7),s=r(4),a=r(21),c=r.n(a),d=r(22),u=r.n(d),l=r(12),f=r.n(l),p=r(23),h=r(36),g=r(6),b=r(24),m=r(2),w=r(0),y=r(11);const x=Object(m.createLogger)(e);function v(e){return e.toLowerCase().replace(/[^a-z0-9.-]+/g,"_")}async function D({messageFile:e,manifestData:t}){let r,n,i=t.name;try{n=await s.fs.readFile(e,{encoding:"utf-8"})}catch(t){throw new w.d(`Error reading messages.json file at ${e}: ${t}`)}try{r=c()(u()(n),e)}catch(e){throw new w.d(`Error parsing messages.json ${e}`)}return i=t.name.replace(/__MSG_([A-Za-z0-9@_]+?)__/g,(t,n)=>{if(r[n]&&r[n].message)return r[n].message;throw new w.d(`The locale file ${e} `+`is missing key: ${n}`)}),Promise.resolve(i)}async function P({manifestData:e,sourceDir:t,fileFilter:r,artifactsDir:n,overwriteDest:s,showReadyMessage:a},{eventToPromise:c=f.a}={}){let d;e?(d=Object(g.b)(e),x.debug(`Using manifest id=${d||"[not specified]"}`)):e=await Object(g.a)(t);const u=await Object(h.a)(t,{filter:(...e)=>r.wantFile(...e)});let l=e.name,{default_locale:p}=e;if(p){p=p.replace(/-/g,"_");const r=i.a.join(t,"_locales",p,"messages.json");x.debug("Manifest declared default_locale, localizing extension name"),l=await D({messageFile:r,manifestData:e})}const b=v(`${l}-${e.version}.zip`),m=i.a.join(n,b),y=Object(o.createWriteStream)(m,{flags:"wx"});y.write(u,()=>y.end());try{await c(y,"close")}catch(e){if(!Object(w.f)("EEXIST",e))throw e;if(!s)throw new w.d(`Extension exists at the destination path: ${m}\n`+"Use --overwrite-dest to enable overwriting.");x.info(`Destination exists, overwriting: ${m}`);const t=Object(o.createWriteStream)(m);t.write(u,()=>t.end()),await c(t,"close")}return a&&x.info(`Your web extension is ready: ${m}`),{extensionPath:m}}async function O({sourceDir:e,artifactsDir:t,asNeeded:r=!1,overwriteDest:n=!1,ignoreFiles:i=[]},{manifestData:o,createFileFilter:s=y.a,fileFilter:a=s({sourceDir:e,artifactsDir:t,ignoreFiles:i}),onSourceChange:c=p.a,packageCreator:d=P,showReadyMessage:u=!0}={}){const l=r;x.info(`Building web extension from ${e}`);const f=()=>d({manifestData:o,sourceDir:e,fileFilter:a,artifactsDir:t,overwriteDest:n,showReadyMessage:u});await Object(b.a)(t);const h=await f();return l&&(x.info("Rebuilding when files change..."),c({sourceDir:e,artifactsDir:t,onChange:()=>f().catch(e=>{throw x.error(e.stack),e}),shouldWatchFile:(...e)=>a.wantFile(...e)})),h}}.call(this,"src/cmd/build.js")},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return a});var n=r(42),i=r.n(n),o=r(2);const s=Object(o.createLogger)(e);function a({title:e,message:t,icon:r},{notifier:n=i.a,log:o=s}={}){return new Promise((i,s)=>{n.notify({title:e,message:t,icon:r},(e,t)=>{e?(o.debug(`Desktop notifier error: ${e.message},`+` response: ${t}`),s(e)):i()})})}}).call(this,"src/util/desktop-notifier.js")},function(e,t){e.exports=require("camelcase")},function(e,t,r){"use strict";(function(e){r.d(t,"b",function(){return p}),r.d(t,"a",function(){return h}),r.d(t,"c",function(){return b});var n=r(1),i=r.n(n),o=r(26),s=r.n(o),a=r(0),c=(r(15),r(2)),d=r(11),u=r(8),l=r(23);const f=Object(c.createLogger)(e);async function p(e){switch(e.target){case"firefox-desktop":{const{FirefoxDesktopExtensionRunner:t}=r(59);return new t(e.params)}case"firefox-android":{const{FirefoxAndroidExtensionRunner:t}=r(60);return new t(e.params)}default:throw new a.e(`Unknown target: "${e.target}"`)}}class h{constructor(e){i()(this,"extensionRunners",void 0),i()(this,"desktopNotifications",void 0),this.extensionRunners=e.runners,this.desktopNotifications=e.desktopNotifications}getName(){return"Multi Extension Runner"}async run(){const e=[];for(const t of this.extensionRunners)e.push(t.run());await Promise.all(e)}async reloadAllExtensions(){f.debug("Reloading all reloadable add-ons");const e=[];for(const t of this.extensionRunners){const r=t.reloadAllExtensions().then(()=>({runnerName:t.getName()}),e=>({runnerName:t.getName(),reloadError:e}));e.push(r)}return await Promise.all(e).then(e=>(this.handleReloadResults(e),e))}async reloadExtensionBySourceDir(e){f.debug(`Reloading add-on at ${e}`);const t=[];for(const r of this.extensionRunners){const n=r.reloadExtensionBySourceDir(e).then(()=>({runnerName:r.getName(),sourceDir:e}),t=>({runnerName:r.getName(),reloadError:t,sourceDir:e}));t.push(n)}return await Promise.all(t).then(e=>(this.handleReloadResults(e),e))}registerCleanup(e){const t=[];for(const e of this.extensionRunners)t.push(new Promise(t=>{e.registerCleanup(t)}));Promise.all(t).then(e,e)}async exit(){const e=[];for(const t of this.extensionRunners)e.push(t.exit());await Promise.all(e)}handleReloadResults(e){for(const t of e){const{runnerName:e,reloadError:r,sourceDir:n}=t;if(r instanceof Error){let t="Error occurred while reloading";n&&(t+=` "${n}" `),t+=`on "${e}" - ${r.message}`,f.error(`\n${t}`),f.debug(r.stack),this.desktopNotifications({title:"web-ext run: extension reload error",message:t})}}}}function g({reloadExtension:e,sourceDir:t,artifactsDir:r,ignoreFiles:n,onSourceChange:i=l.a,createFileFilter:o=d.a}){const s=o({sourceDir:t,artifactsDir:r,ignoreFiles:n});return i({sourceDir:t,artifactsDir:r,onChange:()=>e(t),shouldWatchFile:e=>s.wantFile(e)})}function b({artifactsDir:e,extensionRunner:t,ignoreFiles:r,noInput:n=!1,sourceDir:i},{createWatcher:o=g,stdin:a=process.stdin,kill:c=process.kill}={}){const d=!n;d||f.debug("Input has been disabled because of noInput==true");const l=o({reloadExtension:e=>{t.reloadExtensionBySourceDir(e)},sourceDir:i,artifactsDir:e,ignoreFiles:r});if(t.registerCleanup(()=>{l.close(),d&&a.pause()}),d&&Object(u.a)(a)){s.a.emitKeypressEvents(a),Object(u.b)(a,!0);const e="Press R to reload (and Ctrl-C to quit)";Promise.resolve().then(async function(){f.info(e);let r=!1;for(;!r;){const n=await new Promise(e=>{a.once("keypress",(t,r)=>e(r))});n.ctrl&&"c"===n.name?r=!0:"z"===n.name?(Object(u.b)(a,!1),f.info("\nweb-ext has been suspended on user request"),c(process.pid,"SIGTSTP"),f.info(`\nweb-ext has been resumed. ${e}`),Object(u.b)(a,!0)):"r"===n.name&&(f.debug("Reloading installed extensions on user request"),t.reloadAllExtensions())}f.info("\nExiting web-ext on user request"),t.exit()})}}}).call(this,"src/extension-runners/index.js")},function(e,t,r){"use strict";r.r(t),function(e){r.d(t,"defaultFirefoxEnv",function(){return A}),r.d(t,"defaultRemotePortFinder",function(){return F}),r.d(t,"run",function(){return k}),r.d(t,"isDefaultProfile",function(){return S}),r.d(t,"configureProfile",function(){return C}),r.d(t,"defaultCreateProfileFinder",function(){return R}),r.d(t,"useProfile",function(){return T}),r.d(t,"createProfile",function(){return I}),r.d(t,"copyProfile",function(){return N}),r.d(t,"installExtension",function(){return q});var n=r(1),i=r.n(n),o=r(7),s=r.n(o),a=r(3),c=r.n(a),d=r(5),u=r(43),l=r.n(u),f=r(10),p=r.n(f),h=r(4),g=r(12),b=r.n(g),m=r(28),w=r(0),y=r(25),x=r(6),v=r(2),D=r(9);function P(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function O(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?P(r,!0).forEach(function(t){i()(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):P(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}const $=Object(v.createLogger)(e),j=h.fs.stat.bind(h.fs),A={XPCOM_DEBUG_BREAK:"stack",NS_TRACE_MALLOC_DISABLE_STACKS:"1"};async function F({portToTry:e=D.a,retriesLeft:t=10,connectToFirefox:r=D.b}={}){let n;for($.debug(`Checking if remote Firefox port ${e} is available`);t>=0;){try{n=await r(e),$.debug(`Remote Firefox port ${e} is in use `+`(retries remaining: ${t})`)}catch(t){if(Object(w.f)("ECONNREFUSED",t))return e;throw t}n.disconnect(),e++,t--}throw new w.e("Too many retries on port search")}async function k(e,{fxRunner:t=l.a,findRemotePort:r=F,firefoxBinary:n,binaryArgs:i}={}){$.debug(`Running Firefox with profile at ${e.path()}`);const o=await r(),s=await t({binary:n,"binary-args":i,"no-remote":!0,listen:o,foreground:!0,profile:e.path(),env:O({},process.env,{},A),verbose:!0}),a=s.process;return $.debug(`Executing Firefox binary: ${s.binary}`),$.debug(`Firefox args: ${s.args.join(" ")}`),a.on("error",e=>{throw $.error(`Firefox error: ${e}`),e}),$.info("Use --verbose or open Tools > Web Developer > Browser Console to see logging"),a.stderr.on("data",e=>{$.debug(`Firefox stderr: ${e.toString().trim()}`)}),a.stdout.on("data",e=>{$.debug(`Firefox stdout: ${e.toString().trim()}`)}),a.on("close",()=>{$.debug("Firefox closed")}),{firefox:a,debuggerPort:o}}const E=["default","dev-edition-default"];async function S(e,t=p.a.Finder,r=h.fs.stat){if(E.includes(e))return!0;const n=t.locateUserDirectory(),i=c.a.join(n,"profiles.ini");try{await r(i)}catch(e){if(Object(w.f)("ENOENT",e))return $.debug(`profiles.ini not found: ${e}`),!1;throw e}const o=new t(n),s=Object(d.promisify)(o.readProfiles.bind(o));await s();const a=c.a.normalize(c.a.join(c.a.resolve(e),c.a.sep));for(const t of o.profiles)if(E.includes(t.Name)||"1"===t.Default){let r;if(t.Name===e)return!0;if(r="1"===t.IsRelative?c.a.join(n,t.Path,c.a.sep):c.a.join(t.Path,c.a.sep),c.a.normalize(r)===a)return!0}return!1}function C(e,{app:t="firefox",getPrefs:r=y.b,customPrefs:n={}}={}){const i=r(t);if(Object.keys(i).forEach(t=>{e.setPreference(t,i[t])}),Object.keys(n).length>0){const t=JSON.stringify(n,null,2);$.info(`Setting custom Firefox preferences: ${t}`),Object.keys(n).forEach(t=>{e.setPreference(t,n[t])})}return e.updatePreferences(),Promise.resolve(e)}function R({userDirectoryPath:e,FxProfile:t=p.a}={}){const r=new t.Finder(e),n=Object(d.promisify)(r.readProfiles.bind(r)),i=Object(d.promisify)(r.getPath.bind(r));return async e=>{try{if(await n(),0!==r.profiles.filter(t=>t.Name===e).length)return await i(e)}catch(e){if(!Object(w.f)("ENOENT",e))throw e;$.warn("Unable to find Firefox profiles.ini")}}}async function T(e,{app:t,configureThisProfile:r=C,isFirefoxDefaultProfile:n=S,customPrefs:i={},createProfileFinder:o=R}={}){if(await n(e))throw new w.d("Cannot use --keep-profile-changes on a default profile"+` ("${e}")`+" because web-ext will make it insecure and unsuitable for daily use.\nSee https://github.com/mozilla/web-ext/issues/1005");let s;const a=o();if(await Object(m.a)(e))$.debug(`Using profile directory "${e}"`),s=e;else if($.debug(`Assuming ${e} is a named profile`),!(s=await a(e)))throw new w.d(`The request "${e}" profile name `+"cannot be resolved to a profile path");const c=new p.a({destinationDirectory:s});return await r(c,{app:t,customPrefs:i})}async function I({app:e,configureThisProfile:t=C,customPrefs:r={}}={}){const n=new p.a;return await t(n,{app:e,customPrefs:r})}async function N(e,{app:t,configureThisProfile:r=C,copyFromUserProfile:n=f.copyFromUserProfile,customPrefs:i={}}={}){const o=Object(d.promisify)(p.a.copy),s=Object(d.promisify)(n);try{let n;return await Object(m.a)(e)?($.debug(`Copying profile directory from "${e}"`),n=await o({profileDirectory:e})):($.debug(`Assuming ${e} is a named profile`),n=await s({name:e})),r(n,{app:t,customPrefs:i})}catch(t){throw new w.e(`Could not copy Firefox profile from ${e}: ${t}`)}}async function q({asProxy:e=!1,manifestData:t,profile:r,extensionPath:n,asyncFsStat:i=j}){if(!r.extensionsDir)throw new w.e("profile.extensionsDir was unexpectedly empty");try{await i(r.extensionsDir)}catch(e){if(!Object(w.f)("ENOENT",e))throw e;$.debug(`Creating extensions directory: ${r.extensionsDir}`),await h.fs.mkdir(r.extensionsDir)}const o=Object(x.b)(t);if(!o)throw new w.d("An explicit extension ID is required when installing to a profile (applications.gecko.id not found in manifest.json)");if(e){if($.debug(`Installing as an extension proxy; source: ${n}`),!await Object(m.a)(n))throw new w.e("proxy install: extensionPath must be the extension source "+`directory; got: ${n}`);const e=c.a.join(r.extensionsDir,`${o}`),t=s.a.createWriteStream(e);return t.write(n),t.end(),await b()(t,"close")}{const e=s.a.createReadStream(n),t=c.a.join(r.extensionsDir,`${o}.xpi`),i=s.a.createWriteStream(t);return $.debug(`Installing extension from ${n} to ${t}`),e.pipe(i),await Promise.all([b()(e,"close"),b()(i,"close")])}}}.call(this,"src/firefox/index.js")},function(e,t){e.exports=require("os")},function(e,t,r){"use strict";t.a={build:async function(e,t){const{default:n}=r(14);return n(e,t)},lint:async function(e,t){const{default:n}=r(57);return n(e,t)},run:async function(e,t){const{default:n}=r(58);return n(e,t)},sign:async function(e,t){const{default:n}=r(61);return n(e,t)},docs:async function(e,t){const{default:n}=r(62);return n(e,t)}}},function(e,t){e.exports=require("parse-json")},function(e,t){e.exports=require("strip-json-comments")},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return d});var n=r(34),i=r.n(n),o=r(35),s=r.n(o),a=r(2);const c=Object(a.createLogger)(e);function d({sourceDir:e,artifactsDir:t,onChange:r,shouldWatchFile:n}){const o=new i.a;return r=s()(r,1e3,!0),o.on("change",e=>{!function({artifactsDir:e,onChange:t,filePath:r,shouldWatchFile:n}){0!==r.indexOf(e)&&n(r)?(c.debug(`Changed: ${r}`),c.debug(`Last change detection: ${(new Date).toTimeString()}`),t()):c.debug(`Ignoring change to: ${r}`)}({artifactsDir:t,onChange:r,filePath:e,shouldWatchFile:n})}),c.debug(`Watching for file changes in ${e}`),o.watch([],[e],Date.now()),process.on("SIGINT",()=>o.close()),o}}).call(this,"src/watcher.js")},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return f});var n=r(5),i=r(4),o=r(39),s=r.n(o),a=r(0),c=r(2);const d=Object(c.createLogger)(e),u=Object(n.promisify)(s.a),l=i.fs.access.bind(i.fs);async function f(e,{asyncMkdirp:t=u,asyncFsAccess:r=l}={}){try{if(!(await i.fs.stat(e)).isDirectory())throw new a.d(`--artifacts-dir="${e}" exists but it is not a directory.`);try{await r(e,i.fs.W_OK)}catch(t){throw Object(a.f)("EACCES",t)?new a.d(`--artifacts-dir="${e}" exists but the user lacks `+"permissions on it."):t}}catch(r){if(Object(a.f)("EACCES",r))throw new a.d(`Cannot access --artifacts-dir="${e}" because the user `+`lacks permissions: ${r}`);if(!Object(a.f)("ENOENT",r))throw r;try{d.debug(`Creating artifacts directory: ${e}`),await t(e)}catch(t){throw Object(a.f)("EACCES",t)?new a.d(`Cannot create --artifacts-dir="${e}" because the `+`user lacks permissions: ${t}`):t}}return e}}).call(this,"src/util/artifacts.js")},function(e,t,r){"use strict";(function(e){r.d(t,"b",function(){return f}),r.d(t,"a",function(){return p});var n=r(1),i=r.n(n),o=r(0),s=r(2);function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}const c=Object(s.createLogger)(e),d=["devtools.debugger.remote-enabled","devtools.debugger.prompt-connection","xpinstall.signatures.required"],u={"browser.dom.window.dump.enabled":!0,"devtools.debugger.remote-enabled":!0,"devtools.debugger.prompt-connection":!1,"extensions.logging.enabled":!1,"extensions.checkCompatibility.nightly":!1,"extensions.update.enabled":!1,"extensions.update.notifyUser":!1,"extensions.enabledScopes":5,"extensions.getAddons.cache.enabled":!1,"extensions.installDistroAddons":!1,"extensions.autoDisableScopes":10,"app.update.enabled":!1,"xpinstall.signatures.required":!1},l={common:u,fennec:{"browser.console.showInPanel":!0,"browser.firstrun.show.uidiscovery":!1,"browser.link.open_newwindow":3,"devtools.remote.usb.enabled":!0},firefox:{"browser.startup.homepage":"about:blank","startup.homepage_welcome_url":"about:blank","startup.homepage_welcome_url.additional":"","devtools.errorconsole.enabled":!0,"devtools.chrome.enabled":!0,"urlclassifier.updateinterval":172800,"browser.safebrowsing.provider.0.gethashURL":"http://localhost/safebrowsing-dummy/gethash","browser.safebrowsing.provider.0.keyURL":"http://localhost/safebrowsing-dummy/newkey","browser.safebrowsing.provider.0.updateURL":"http://localhost/safebrowsing-dummy/update","browser.selfsupport.url":"https://localhost/selfrepair","browser.reader.detectedFirstArticle":!0,"datareporting.policy.firstRunURL":""}};function f(e="firefox"){const t=l[e];if(!t)throw new o.e(`Unsupported application: ${e}`);return function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(r,!0).forEach(function(t){i()(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}({},u,{},t)}function p(e){const t={};for(const r of e){const e=r.split("=");if(e.length<2)throw new o.d(`Incomplete custom preference: "${r}". `+'Syntax expected: "prefname=prefvalue".');const n=e[0];let i=e.slice(1).join("=");if(/[^\w{@}.-]/.test(n))throw new o.d(`Invalid custom preference name: ${n}`);i===`${parseInt(i)}`?i=parseInt(i,10):"true"!==i&&"false"!==i||(i="true"===i),d.includes(n)?c.warn(`'${n}' preference cannot be customized.`):t[`${n}`]=i}return t}}).call(this,"src/firefox/preferences.js")},function(e,t){e.exports=require("readline")},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return f});var n=r(1),i=r.n(n),o=r(5),s=r(29),a=r.n(s),c=r(2),d=r(46);const u=Object(c.createLogger)(e);a.a.dir[o.promisify.custom]=Object(d.a)(a.a.dir);const l=Object(o.promisify)(a.a.dir);function f(e){const t=new p;return t.create().then(()=>e(t)).catch(t.errorHandler()).then(t.successHandler())}class p{constructor(){i()(this,"_path",void 0),i()(this,"_removeTempDir",void 0),this._path=void 0,this._removeTempDir=void 0}create(){return l({prefix:"tmp-web-ext-",unsafeCleanup:!0}).then(([e,t])=>(this._path=e,this._removeTempDir=()=>new Promise((e,r)=>{t(t=>t?r(t):e())}),u.debug(`Created temporary directory: ${this.path()}`),this))}path(){if(!this._path)throw new Error("You cannot access path() before calling create()");return this._path}errorHandler(){return async e=>{throw await this.remove(),e}}successHandler(){return async e=>(await this.remove(),e)}remove(){if(this._removeTempDir)return u.debug(`Removing temporary directory: ${this.path()}`),this._removeTempDir&&this._removeTempDir()}}}).call(this,"src/util/temp-dir.js")},function(e,t,r){"use strict";r.d(t,"a",function(){return o});var n=r(4),i=r(0);function o(e){return n.fs.stat(e).then(e=>e.isDirectory()).catch(Object(i.g)(["ENOENT","ENOTDIR"],()=>!1))}},function(e,t){e.exports=require("tmp")},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return x}),r.d(t,"c",function(){return v}),r.d(t,"b",function(){return D});var n=r(1),i=r.n(n),o=r(19),s=r.n(o),a=r(3),c=r.n(a),d=r(53),u=r.n(d),l=r(16),f=r.n(l),p=r(54),h=r.n(p),g=r(55),b=r(2),m=r(0);function w(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}const y=Object(b.createLogger)(e);function x({argv:e,argvFromCLI:t,configObject:r,options:n,configFileName:o}){let s=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?w(r,!0).forEach(function(t){i()(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):w(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}({},e);for(const e of Object.keys(r)){if(f()(e)!==e)throw new m.d(`The config option "${e}" must be `+`specified in camel case: "${f()(e)}"`);if(!Array.isArray(r[e])&&"object"==typeof n[e]&&"object"==typeof r[e]){s=x({argv:s,argvFromCLI:t,configObject:r[e],options:n[e],configFileName:o});continue}const i=h()(e,"-");if("object"!=typeof n[i])throw new m.d(`The config file at ${o} specified `+`an unknown option: "${e}"`);if(void 0===n[i].type)throw new m.e(`Option: ${e} was defined without a type.`);const a="count"===n[i].type?"number":n[i].type,c=Array.isArray(r[e])?"array":typeof r[e];if(c!==a)throw new m.d(`The config file at ${o} specified `+`the type of "${e}" incorrectly as "${c}"`+` (expected type "${a}")`);let d;if(n[i]&&(void 0!==n[i].default?d=n[i].default:"boolean"===a&&(d=!1)),void 0!==t[e]&&t[e]!==d){y.debug(`Favoring CLI: ${e}=${t[e]} over `+`configuration: ${e}=${r[e]}`),s[e]=t[e];continue}s[e]=r[e];const u=n[i].coerce;u&&(y.debug(`Calling coerce() on configured value for ${e}`),s[e]=u(s[e]))}return s}function v(e){const t=c.a.resolve(e);let r;y.debug(`Loading JS config file: "${e}" `+`(resolved to "${t}")`);try{r=u()(t)}catch(e){throw y.debug("Handling error:",e),new m.d(`Cannot read config file: ${t}\n`+`Error: ${e.message}`)}return e.endsWith("package.json")&&(y.debug("Looking for webExt key inside package.json file"),r=r.webExt||{}),0===Object.keys(r).length&&y.debug(`Config file ${t} did not define any options. `+"Did you set module.exports = {...}?"),r}async function D({getHomeDir:e=s.a.homedir}={}){const t=[c.a.join(e(),".web-ext-config.js"),c.a.join(process.cwd(),"package.json"),c.a.join(process.cwd(),"web-ext-config.js")],r=await Promise.all(t.map(async e=>{const t=c.a.resolve(e);return await Object(g.a)(t)?t:void y.debug(`Discovered config "${t}" does not `+"exist or is not readable")})),n=[];return r.forEach(e=>{"string"==typeof e&&n.push(e)}),n}}).call(this,"src/config.js")},function(e,t){e.exports=require("git-rev-sync")},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return F});var n=r(1),i=r.n(n),o=r(19),s=r.n(o),a=r(3),c=r.n(a),d=r(7),u=r(16),l=r.n(u),f=r(31),p=r.n(f),h=r(33),g=r.n(h),b=r(20),m=r(0),w=r(2),y=r(25),x=r(51),v=r(30);function D(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function P(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?D(r,!0).forEach(function(t){i()(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):D(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}const O=Object(w.createLogger)(e),$="WEB_EXT";class j{constructor(e,{absolutePackageDir:t=process.cwd()}={}){i()(this,"absolutePackageDir",void 0),i()(this,"yargs",void 0),i()(this,"commands",void 0),i()(this,"shouldExitProgram",void 0),i()(this,"verboseEnabled",void 0),i()(this,"options",void 0),e=e||process.argv.slice(2);const r=g()(e,t);this.absolutePackageDir=t,this.verboseEnabled=!1,this.shouldExitProgram=!0,this.yargs=r,this.yargs.parserConfiguration({"boolean-negation":!1}),this.yargs.strict(),this.commands={},this.options={}}command(e,t,r,n={}){return this.options[l()(e)]=n,this.yargs.command(e,t,e=>{if(n)return e.demandCommand(0,0,void 0,"This command does not take any arguments").strict().exitProcess(this.shouldExitProgram).env($).options(n)}),this.commands[e]=r,this}setGlobalOptions(e){return this.options=P({},this.options,{},e),Object.keys(e).forEach(t=>{e[t].global=!0,void 0===e[t].demandOption&&(e[t].demandOption=!0)}),this.yargs.options(e),this}enableVerboseMode(e,t){this.verboseEnabled||(e.makeVerbose(),O.info("Version:",t),this.verboseEnabled=!0)}async execute({checkForUpdates:e=x.a,systemProcess:t=process,logStream:r=w.consoleStream,getVersion:n=A,applyConfigToArgv:i=v.a,discoverConfigFiles:o=v.b,loadJSConfigFile:a=v.c,shouldExitProgram:d=!0,globalEnv:u="production"}={}){this.shouldExitProgram=d,this.yargs.exitProcess(this.shouldExitProgram);const l=this.yargs.argv;if(l.ignoreFiles&&!l.ignoreFiles.length)throw new m.d("Not enough arguments following: ignore-files");const f=l._[0],p=n(this.absolutePackageDir),h=this.commands[f];l.verbose&&this.enableVerboseMode(r,p);let g=P({},l);try{if(void 0===f)throw new m.d("No sub-command was specified in the args");if(!h)throw new m.d(`Unknown command: ${f}`);"production"===u&&e({version:p});const n=[];if(l.configDiscovery&&!l.noConfigDiscovery){O.debug("Discovering config files. Set --no-config-discovery to disable");const e=await o();n.push(...e)}else O.debug("Not discovering config files");if(l.config&&n.push(c.a.resolve(l.config)),n.length){const e=n.map(e=>e.replace(process.cwd(),".")).map(e=>e.replace(s.a.homedir(),"~")).join(", ");O.info("Applying config file"+`${1!==n.length?"s":""}: `+`${e}`)}n.forEach(e=>{const t=a(e);g=i({argv:g,argvFromCLI:l,configFileName:e,configObject:t,options:this.options})}),g.verbose&&this.enableVerboseMode(r,p),await h(g,{shouldExitProgram:d})}catch(e){if(e instanceof m.d&&!g.verbose?O.error(`\n${e}\n`):O.error(`\n${e.stack}\n`),e.code&&O.error(`Error code: ${e.code}\n`),O.debug(`Command executed: ${f}`),!this.shouldExitProgram)throw e;t.exit(1)}}}function A(e,{globalEnv:t="production"}={}){if("production"===t){O.debug("Getting the version from package.json");const t=Object(d.readFileSync)(c.a.join(e,"package.json"));return JSON.parse(t).version}return O.debug("Getting version from the git revision"),`${p.a.branch(e)}-${p.a.long(e)}`}function F(e,{getVersion:t=A,commands:r=b.a,argv:n,runOptions:i={}}={}){const o=new j(n,{absolutePackageDir:e}),s=t(e);return o.yargs.usage(`Usage: $0 [options] command\n\nOption values can also be set by declaring an environment variable prefixed\nwith $${$}_. For example: $${$}_SOURCE_DIR=/path is the same as\n--source-dir=/path.\n\nTo view specific help for any given command, add the command name.\nExample: $0 --help run.\n`).help("help").alias("h","help").env($).version(s).demandCommand(1,"You must specify a command").strict(),o.setGlobalOptions({"source-dir":{alias:"s",describe:"Web extension source directory.",default:process.cwd(),requiresArg:!0,type:"string",coerce:c.a.resolve},"artifacts-dir":{alias:"a",describe:"Directory where artifacts will be saved.",default:c.a.join(process.cwd(),"web-ext-artifacts"),normalize:!0,requiresArg:!0,type:"string"},verbose:{alias:"v",describe:"Show verbose output",type:"boolean",demandOption:!1},"ignore-files":{alias:"i",describe:'A list of glob patterns to define which files should be ignored. (Example: --ignore-files=path/to/first.js path/to/second.js "**/*.log")',demandOption:!1,type:"array"},"no-input":{describe:"Disable all features that require standard input",type:"boolean",demandOption:!1},config:{alias:"c",describe:"Path to a CommonJS config file to set option defaults",default:void 0,demandOption:!1,requiresArg:!0,type:"string"},"config-discovery":{describe:"Discover config files in home directory and working directory. Disable with --no-config-discovery.",demandOption:!1,default:!0,type:"boolean"}}),o.command("build","Create an extension package from source",r.build,{"as-needed":{describe:"Watch for file changes and re-build as needed",type:"boolean"},"overwrite-dest":{alias:"o",describe:"Overwrite destination package if it exists.",type:"boolean"}}).command("sign","Sign the extension so it can be installed in Firefox",r.sign,{"api-key":{describe:"API key (JWT issuer) from addons.mozilla.org",demandOption:!0,type:"string"},"api-secret":{describe:"API secret (JWT secret) from addons.mozilla.org",demandOption:!0,type:"string"},"api-url-prefix":{describe:"Signing API URL prefix",default:"https://addons.mozilla.org/api/v3",demandOption:!0,type:"string"},"api-proxy":{describe:"Use a proxy to access the signing API. Example: https://yourproxy:6000 ",demandOption:!1,type:"string"},id:{describe:"A custom ID for the extension. This has no effect if the extension already declares an explicit ID in its manifest.",demandOption:!1,type:"string"},timeout:{describe:"Number of milliseconds to wait before giving up",type:"number"},channel:{describe:"The channel for which to sign the addon. Either 'listed' or 'unlisted'",type:"string"}}).command("run","Run the extension",r.run,{target:{alias:"t",describe:"The extensions runners to enable. Specify this option multiple times to run against multiple targets.",default:"firefox-desktop",demandOption:!1,type:"array",choices:["firefox-desktop","firefox-android"]},firefox:{alias:["f","firefox-binary"],describe:"Path or alias to a Firefox executable such as firefox-bin or firefox.exe. If not specified, the default Firefox will be used. You can specify the following aliases in lieu of a path: firefox, beta, nightly, firefoxdeveloperedition.",demandOption:!1,type:"string"},"firefox-profile":{alias:"p",describe:"Run Firefox using a copy of this profile. The profile can be specified as a directory or a name, such as one you would see in the Profile Manager. If not specified, a new temporary profile will be created.",demandOption:!1,type:"string"},"keep-profile-changes":{describe:"Run Firefox directly in custom profile. Any changes to the profile will be saved.",demandOption:!1,type:"boolean"},"no-reload":{describe:"Do not reload the extension when source files change",demandOption:!1,type:"boolean"},"pre-install":{describe:"Pre-install the extension into the profile before startup. This is only needed to support older versions of Firefox.",demandOption:!1,type:"boolean"},pref:{describe:"Launch firefox with a custom preference (example: --pref=general.useragent.locale=fr-FR). You can repeat this option to set more than one preference.",demandOption:!1,requiresArg:!0,type:"array",coerce:y.a},"start-url":{alias:["u","url"],describe:"Launch firefox at specified page",demandOption:!1,requiresArg:!0,type:"array"},"browser-console":{alias:["bc"],describe:"Open the DevTools Browser Console.",demandOption:!1,type:"boolean"},args:{alias:["arg"],describe:"Additional CLI options passed to the Browser binary",demandOption:!1,type:"array"},"adb-bin":{describe:"Specify a custom path to the adb binary",demandOption:!1,type:"string",requiresArg:!0},"adb-host":{describe:"Connect to adb on the specified host",demandOption:!1,type:"string",requiresArg:!0},"adb-port":{describe:"Connect to adb on the specified port",demandOption:!1,type:"string",requiresArg:!0},"adb-device":{alias:["android-device"],describe:"Connect to the specified adb device name",demandOption:!1,type:"string",requiresArg:!0},"firefox-apk":{describe:"Run a specific Firefox for Android APK. Example: org.mozilla.fennec_aurora",demandOption:!1,type:"string",requiresArg:!0}}).command("lint","Validate the extension source",r.lint,{output:{alias:"o",describe:"The type of output to generate",type:"string",default:"text",choices:["json","text"]},metadata:{describe:"Output only metadata as JSON",type:"boolean",default:!1},"warnings-as-errors":{describe:"Treat warnings as errors by exiting non-zero for warnings",alias:"w",type:"boolean",default:!1},pretty:{describe:"Prettify JSON output",type:"boolean",default:!1},"self-hosted":{describe:"Your extension will be self-hosted. This disables messages related to hosting on addons.mozilla.org.",type:"boolean",default:!1},boring:{describe:"Disables colorful shell output",type:"boolean",default:!1}}).command("docs","Open the web-ext documentation in a browser",r.docs,{}),o.execute(P({getVersion:t},i))}}).call(this,"src/program.js")},function(e,t){e.exports=require("yargs")},function(e,t){e.exports=require("watchpack")},function(e,t){e.exports=require("debounce")},function(e,t,r){"use strict";r.d(t,"a",function(){return s});var n=r(5),i=r(37),o=r.n(i);const s=Object(n.promisify)(o.a)},function(e,t){e.exports=require("zip-dir")},function(e,t){e.exports=require("es6-error")},function(e,t){e.exports=require("mkdirp")},function(e,t){e.exports=require("multimatch")},function(e,t){e.exports=require("addons-linter")},function(e,t){e.exports=require("node-notifier")},function(e,t){e.exports=require("fx-runner")},function(e,t){e.exports=require("@cliqz-oss/node-firefox-connect")},function(e,t){e.exports=require("net")},function(e,t,r){"use strict";function n(e){return(...t)=>new Promise((r,n)=>{e(...t,(e,...t)=>{e?n(e):r(t)})})}r.d(t,"a",function(){return n})},function(e,t,r){"use strict";(function(e){r.d(t,"a",function(){return l});var n=r(1),i=r.n(n),o=r(48),s=r.n(o),a=r(0),c=r(2);const d=Object(c.createLogger)(e);async function u(e){try{return await e()}catch(e){if(Object(a.f)("ENOENT",e)&&e.message.includes("spawn adb"))throw new a.d("No adb executable has been found. You can Use --adb-bin, --adb-host/--adb-port to configure it manually if needed.");throw e}}class l{constructor(e){i()(this,"params",void 0),i()(this,"adb",void 0),i()(this,"adbClient",void 0),i()(this,"artifactsDirMap",void 0),i()(this,"userAbortDiscovery",void 0),this.params=e;const{adb:t,adbBin:r,adbHost:n,adbPort:o}=e;this.adb=t||s.a,this.adbClient=this.adb.createClient({bin:r,host:n,port:o}),this.artifactsDirMap=new Map,this.userAbortDiscovery=!1}runShellCommand(e,t){const{adb:r,adbClient:n}=this;return d.debug(`Run adb shell command on ${e}: ${JSON.stringify(t)}`),u(async()=>await n.shell(e,t).then(r.util.readAll)).then(e=>e.toString())}async discoverDevices(){const{adbClient:e}=this;let t=[];return d.debug("Listing android devices"),(t=await u(async()=>e.listDevices())).map(e=>e.id)}async discoverInstalledFirefoxAPKs(e,t){return d.debug(`Listing installed Firefox APKs on ${e}`),(await this.runShellCommand(e,["pm","list","packages"])).split("\n").map(e=>e.replace("package:","").trim()).filter(e=>t?e===t:e.startsWith("org.mozilla.fennec")||e.startsWith("org.mozilla.firefox"))}async getAndroidVersionNumber(e){const t=(await this.runShellCommand(e,["getprop","ro.build.version.sdk"])).trim(),r=parseInt(t);if(isNaN(r))throw new a.e("Unable to discovery android version on "+`${e}: ${t}`);return r}async ensureRequiredAPKRuntimePermissions(e,t,r){const n={};for(const e of r)n[e]=!1;const i=(await this.runShellCommand(e,["pm","dump",t])).split("\n");for(const e of i)for(const t of r)(e.includes(`${t}: granted=true`)||e.includes(`${t}, granted=true`))&&(n[t]=!0);for(const e of r)if(!n[e])throw new a.d(`Required ${e} has not be granted for ${t}. `+"Please grant them using the Android Settings or using the following adb command:\n"+`\t adb shell pm grant ${t} ${e}\n`)}async amForceStopAPK(e,t){await this.runShellCommand(e,["am","force-stop",t])}async getOrCreateArtifactsDir(e){let t=this.artifactsDirMap.get(e);if(t)return t;if(t=`/sdcard/web-ext-artifacts-${Date.now()}`,"1"!==(await this.runShellCommand(e,`test -d ${t} ; echo $?`)).trim())throw new a.e(`Cannot create artifacts directory ${t} `+`because it exists on ${e}.`);return await this.runShellCommand(e,["mkdir","-p",t]),this.artifactsDirMap.set(e,t),t}async clearArtifactsDir(e){const t=this.artifactsDirMap.get(e);t&&(this.artifactsDirMap.delete(e),d.debug(`Removing ${t} artifacts directory on ${e} device`),await this.runShellCommand(e,["rm","-rf",t]))}async pushFile(e,t,r){const{adbClient:n}=this;d.debug(`Pushing ${t} to ${r} on ${e}`),await u(async()=>{await n.push(e,t,r).then(function(e){return new Promise(t=>{e.on("end",t)})})})}async startFirefoxAPK(e,t,r){const{adbClient:n}=this;d.debug(`Starting ${t} with profile ${r} on ${e}`),await u(async()=>{await n.startActivity(e,{wait:!0,action:"android.activity.MAIN",component:`${t}/.App`,extras:[{key:"args",value:`-profile ${r}`}]})})}setUserAbortDiscovery(e){this.userAbortDiscovery=e}async discoverRDPUnixSocket(e,t,{maxDiscoveryTime:r,retryInterval:n}={}){let i=[];const o=Date.now();for(;0===i.length;){if(this.userAbortDiscovery)throw new a.d("Exiting Firefox Remote Debugging socket discovery on user request");if(Date.now()-o>r)throw new a.e("Timeout while waiting for the Android Firefox Debugger Socket");0===(i=(await this.runShellCommand(e,["cat","/proc/net/unix"])).split("\n").filter(e=>e.trim().endsWith(`${t}/firefox-debugger-socket`))).length&&await new Promise(e=>setTimeout(e,n))}if((i=i.map(e=>e.trim().split(/\s/).pop())).length>1)throw new a.e("Unexpected multiple RDP sockets: "+`${JSON.stringify(i)}`);return i[0]}async setupForward(e,t,r){const{adbClient:n}=this;d.debug(`Configuring ADB forward for ${e}: ${t} -> ${r}`),await u(async()=>{await n.forward(e,r,t)})}}}).call(this,"src/util/adb.js")},function(e,t){e.exports=require("adbkit")},function(e,t){e.exports=require("sign-addon")},function(e,t){e.exports=require("opn")},function(e,t,r){"use strict";r.d(t,"a",function(){return o});var n=r(52),i=r.n(n);function o({version:e,updateNotifier:t=i.a}){t({pkg:{name:"web-ext",version:e},updateCheckInterval:2592e5}).notify()}},function(e,t){e.exports=require("update-notifier")},function(e,t){e.exports=require("require-uncached")},function(e,t){e.exports=require("decamelize")},function(e,t,r){"use strict";r.d(t,"a",function(){return o});var n=r(4),i=r(0);async function o(e,{fileIsReadable:t=(e=>n.fs.access(e,n.fs.constants.R_OK))}={}){try{return await t(e),(await n.fs.stat(e)).isFile()}catch(e){if(Object(i.f)(["EACCES","ENOENT"],e))return!1;throw e}}},function(e,t,r){"use strict";r.r(t);var n=r(32),i=r(20);const o={logger:r(2)};t.default={main:n.a,cmd:i.a,util:o}},function(e,t,r){"use strict";r.r(t),function(e){r.d(t,"default",function(){return a});var n=r(41),i=r(2),o=r(11);const s=Object(i.createLogger)(e);function a({artifactsDir:e,boring:t,ignoreFiles:r,metadata:i,output:a,pretty:c,sourceDir:d,selfHosted:u,verbose:l,warningsAsErrors:f},{createLinter:p=n.createInstance,createFileFilter:h=o.a,shouldExitProgram:g=!0}={}){const b=h({sourceDir:d,ignoreFiles:r,artifactsDir:e});return s.debug(`Running addons-linter on ${d}`),p({config:{logLevel:l?"debug":"fatal",stack:Boolean(l),pretty:c,warningsAsErrors:f,metadata:i,output:a,boring:t,selfHosted:u,shouldScanFile:e=>b.wantFile(e),_:[d]},runAsBinary:g}).run()}}.call(this,"src/cmd/lint.js")},function(e,t,r){"use strict";r.r(t),function(e){r.d(t,"default",function(){return g});var n=r(1),i=r.n(n),o=r(14),s=r(15),a=r(18),c=r(9),d=r(2),u=r(6),l=r(17);function f(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?f(r,!0).forEach(function(t){i()(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}const h=Object(d.createLogger)(e);async function g({artifactsDir:e,browserConsole:t=!1,pref:r,firefox:n,firefoxProfile:i,keepProfileChanges:d=!1,ignoreFiles:f,noInput:g=!1,noReload:b=!1,preInstall:m=!1,sourceDir:w,startUrl:y,target:x,adbBin:v,adbHost:D,adbPort:P,adbDevice:O,firefoxApk:$,args:j},{buildExtension:A=o.default,desktopNotifications:F=s.a,firefoxApp:k=a,firefoxClient:E=c.c,reloadStrategy:S=l.c,MultiExtensionRunner:C=l.a,getValidatedManifest:R=u.a}={}){h.info(`Running web extension from ${w}`),m&&(h.info("Disabled auto-reloading because it's not possible with --pre-install"),b=!0);const T=r,I=[],N={extensions:[{sourceDir:w,manifestData:await R(w)}],keepProfileChanges:d,startUrl:y,args:j,desktopNotifications:F};if(!x||0===x.length||x.includes("firefox-desktop")){const e=p({},N,{firefoxBinary:n,profilePath:i,customPrefs:T,browserConsole:t,preInstall:m,firefoxApp:k,firefoxClient:E}),r=await Object(l.b)({target:"firefox-desktop",params:e});I.push(r)}if(x&&x.includes("firefox-android")){const e=p({},N,{profilePath:i,customPrefs:T,browserConsole:t,preInstall:m,firefoxApk:$,adbDevice:O,adbHost:D,adbPort:P,adbBin:v,firefoxApp:k,firefoxClient:E,desktopNotifications:s.a,buildSourceDir:(e,t)=>A({sourceDir:e,ignoreFiles:f,asNeeded:!1,artifactsDir:t},{showReadyMessage:!1})}),r=await Object(l.b)({target:"firefox-android",params:e});I.push(r)}const q=new C({desktopNotifications:F,runners:I});return await q.run(),b?h.info("Automatic extension reloading has been disabled"):(h.info("The extension will reload if any source file changes"),S({extensionRunner:q,sourceDir:w,artifactsDir:e,ignoreFiles:f,noInput:g})),q}}.call(this,"src/cmd/run.js")},function(e,t,r){"use strict";r.r(t),function(e){r.d(t,"FirefoxDesktopExtensionRunner",function(){return c});var n=r(1),i=r.n(n),o=r(0),s=(r(18),r(9),r(2));const a=Object(s.createLogger)(e);class c{constructor(e){i()(this,"cleanupCallbacks",void 0),i()(this,"params",void 0),i()(this,"profile",void 0),i()(this,"reloadableExtensions",void 0),i()(this,"remoteFirefox",void 0),i()(this,"runningInfo",void 0),this.params=e,this.reloadableExtensions=new Map,this.cleanupCallbacks=new Set}getName(){return"Firefox Desktop"}async run(){await this.setupProfileDir(),await this.startFirefoxInstance()}async reloadAllExtensions(){const e=this.getName(),t=new Map;for(const e of this.params.extensions){const{sourceDir:r}=e,[n]=await this.reloadExtensionBySourceDir(r);n.reloadError instanceof Error&&t.set(r,n.reloadError)}return t.size>0?[{runnerName:e,reloadError:new o.b(t)}]:[{runnerName:e}]}async reloadExtensionBySourceDir(e){const t=this.getName(),r=this.reloadableExtensions.get(e);if(!r)return[{sourceDir:e,reloadError:new o.e("Extension not reloadable: "+`no addonId has been mapped to "${e}"`),runnerName:t}];try{await this.remoteFirefox.reloadAddon(r)}catch(r){return[{sourceDir:e,reloadError:r,runnerName:t}]}return[{runnerName:t,sourceDir:e}]}registerCleanup(e){this.cleanupCallbacks.add(e)}async exit(){if(!this.runningInfo||!this.runningInfo.firefox)throw new o.e("No firefox instance is currently running");this.runningInfo.firefox.kill()}async setupProfileDir(){const{customPrefs:e,extensions:t,keepProfileChanges:r,preInstall:n,profilePath:i,firefoxApp:o}=this.params;if(i?r?(a.debug(`Using Firefox profile from ${i}`),this.profile=await o.useProfile(i,{customPrefs:e})):(a.debug(`Copying Firefox profile from ${i}`),this.profile=await o.copyProfile(i,{customPrefs:e})):(a.debug("Creating new Firefox profile"),this.profile=await o.createProfile({customPrefs:e})),n)for(const e of t)await o.installExtension({asProxy:!0,extensionPath:e.sourceDir,manifestData:e.manifestData,profile:this.profile})}async startFirefoxInstance(){const{browserConsole:e,extensions:t,firefoxBinary:r,preInstall:n,startUrl:i,firefoxApp:s,firefoxClient:c,args:d}=this.params,u=[];if(e&&u.push("-jsconsole"),i){const e=Array.isArray(i)?i:[i];for(const t of e)u.push("--url",t)}if(d&&u.push(...d),this.runningInfo=await s.run(this.profile,{firefoxBinary:r,binaryArgs:u}),this.runningInfo.firefox.on("close",()=>{for(const e of this.cleanupCallbacks)try{e()}catch(e){a.error(`Exception on executing cleanup callback: ${e}`)}}),!n){const e=this.remoteFirefox=await c({port:this.runningInfo.debuggerPort});for(const r of t)try{const t=await e.installTemporaryAddon(r.sourceDir).then(e=>e.addon.id);if(!t)throw new o.e("Unexpected missing addonId in the installAsTemporaryAddon result");this.reloadableExtensions.set(r.sourceDir,t)}catch(e){throw e instanceof o.c?(a.debug(`Caught: ${e}`),new o.e("Temporary add-on installation is not supported in this version of Firefox (you need Firefox 49 or higher). For older Firefox versions, use --pre-install")):e}}}}}.call(this,"src/extension-runners/firefox-desktop.js")},function(e,t,r){"use strict";r.r(t),function(e){r.d(t,"FirefoxAndroidExtensionRunner",function(){return y});var n=r(1),i=r.n(n),o=r(45),s=r.n(o),a=r(3),c=r.n(a),d=r(26),u=r.n(d),l=r(27),f=r(47),p=(r(15),r(0)),h=(r(18),r(9),r(2)),g=r(8);const b=Object(h.createLogger)(e),m={profilePath:"--profile-path",keepProfileChanges:"--keep-profile-changes",browserConsole:"--browser-console",preInstall:"--pre-install",startUrl:"--start-url",args:"--args"},w=e=>`The Firefox for Android target does not support ${e}`;class y{constructor(e){i()(this,"params",void 0),i()(this,"adbUtils",void 0),i()(this,"exiting",void 0),i()(this,"selectedAdbDevice",void 0),i()(this,"selectedFirefoxApk",void 0),i()(this,"selectedArtifactsDir",void 0),i()(this,"selectedRDPSocketFile",void 0),i()(this,"selectedTCPPort",void 0),i()(this,"cleanupCallbacks",void 0),i()(this,"adbExtensionsPathBySourceDir",void 0),i()(this,"reloadableExtensions",void 0),i()(this,"remoteFirefox",void 0),this.params=e,this.cleanupCallbacks=new Set,this.adbExtensionsPathBySourceDir=new Map,this.reloadableExtensions=new Map,this.printIgnoredParamsWarnings()}async run(){const{adbBin:e,adbHost:t,adbPort:r,ADBUtils:n=f.a}=this.params;this.adbUtils=new n({adbBin:e,adbHost:t,adbPort:r}),await this.adbDevicesDiscoveryAndSelect(),await this.apkPackagesDiscoveryAndSelect(),await this.adbCheckRuntimePermissions(),await this.adbForceStopSelectedPackage(),await this.adbPrepareProfileDir(),await Promise.all([this.adbStartSelectedPackage(),this.buildAndPushExtensions(),this.adbDiscoveryAndForwardRDPUnixSocket()]),await this.rdpInstallExtensions()}getName(){return"Firefox Android"}async reloadAllExtensions(){const e=this.getName(),t=new Map;for(const e of this.params.extensions){const{sourceDir:r}=e,[n]=await this.reloadExtensionBySourceDir(r);n.reloadError instanceof Error&&t.set(r,n.reloadError)}return t.size>0?[{runnerName:e,reloadError:new p.b(t)}]:[{runnerName:e}]}async reloadExtensionBySourceDir(e){const t=this.getName(),r=this.reloadableExtensions.get(e);if(!r)return[{sourceDir:e,reloadError:new p.e("Extension not reloadable: "+`no addonId has been mapped to "${e}"`),runnerName:t}];try{await this.buildAndPushExtension(e),await this.remoteFirefox.reloadAddon(r)}catch(r){return[{sourceDir:e,reloadError:r,runnerName:t}]}return[{runnerName:t,sourceDir:e}]}registerCleanup(e){this.cleanupCallbacks.add(e)}async exit(){const{adbUtils:e,selectedAdbDevice:t,selectedArtifactsDir:r}=this;this.exiting=!0,await this.adbForceStopSelectedPackage(),r&&(b.debug("Cleaning up artifacts directory on the Android device..."),await e.clearArtifactsDir(t));for(const e of this.cleanupCallbacks)try{e()}catch(e){b.error(e)}}getDeviceProfileDir(){return`${this.selectedArtifactsDir}/profile`}printIgnoredParamsWarnings(){Object.keys(m).forEach(e=>{this.params[e]&&b.warn(w(m[e]))})}async adbDevicesDiscoveryAndSelect(){const{adbUtils:e}=this,{adbDevice:t}=this.params;let r=[];if(b.debug("Listing android devices"),0===(r=await e.discoverDevices()).length)throw new p.d("No Android device found through ADB. Make sure the device is connected and USB debugging is enabled.");if(!t){const e=r.map(e=>` - ${e}`).join("\n");throw b.info(`\nAndroid devices found:\n${e}`),new p.d("Select an android device using --android-device=<name>")}const n=r.filter(e=>e===t);if(0===n.length){const e=JSON.stringify(r);throw new p.d(`Android device ${t} was not found in list: ${e}`)}this.selectedAdbDevice=n[0],b.info(`Selected ADB device: ${this.selectedAdbDevice}`)}async apkPackagesDiscoveryAndSelect(){const{adbUtils:e,selectedAdbDevice:t,params:{firefoxApk:r}}=this,n=await e.discoverInstalledFirefoxAPKs(t,r);if(0===n.length)throw new p.d("No Firefox packages were found on the selected Android device");const i=e=>e.map(e=>` - ${e}`).join("\n");if(!r){if(b.info(`\nPackages found:\n${i(n)}`),n.length>1)throw new p.d("Select one of the packages using --firefox-apk");return this.selectedFirefoxApk=n[0],void b.info(`Selected Firefox for Android APK: ${this.selectedFirefoxApk}`)}const o=n.filter(e=>e===r);if(0===o.length){const e=i(o);throw new p.d(`Package ${r} was not found in list: ${e}`)}this.selectedFirefoxApk=o[0],b.debug(`Selected Firefox for Android APK: ${this.selectedFirefoxApk}`)}async adbForceStopSelectedPackage(){const{adbUtils:e,selectedAdbDevice:t,selectedFirefoxApk:r}=this;b.info(`Stopping existing instances of ${r}...`),await e.amForceStopAPK(t,r)}async adbCheckRuntimePermissions(){const{adbUtils:e,selectedAdbDevice:t,selectedFirefoxApk:r}=this;b.debug(`Discovering Android version for ${t}...`);const n=await e.getAndroidVersionNumber(t);if("number"!=typeof n||Number.isNaN(n))throw new p.e(`Invalid Android version: ${n}`);b.debug(`Detected Android version ${n}`),n<23||(b.debug("Checking read/write permissions needed for web-ext"+`on ${r}...`),await e.ensureRequiredAPKRuntimePermissions(t,r,["android.permission.READ_EXTERNAL_STORAGE","android.permission.WRITE_EXTERNAL_STORAGE"]))}async adbPrepareProfileDir(){const{adbUtils:e,selectedAdbDevice:t,selectedFirefoxApk:r,params:{customPrefs:n,firefoxApp:i}}=this;b.debug(`Preparing a temporary profile for ${r}...`);const o=await i.createProfile({app:"fennec",customPrefs:n});this.selectedArtifactsDir=await e.getOrCreateArtifactsDir(t);const s=this.getDeviceProfileDir();await e.runShellCommand(t,["mkdir","-p",s]),await e.pushFile(t,c.a.join(o.profileDir,"user.js"),`${s}/user.js`),b.debug(`Created temporary profile at ${s}.`)}async adbStartSelectedPackage(){const{adbUtils:e,selectedFirefoxApk:t,selectedAdbDevice:r}=this,n=this.getDeviceProfileDir();b.info(`Starting ${t}...`),b.debug(`Using profile ${n}`),await e.startFirefoxAPK(r,t,n)}async buildAndPushExtension(e){const{adbUtils:t,selectedAdbDevice:r,selectedArtifactsDir:n,params:{buildSourceDir:i}}=this;await Object(l.a)(async o=>{const{extensionPath:s}=await i(e,o.path()),a=c.a.basename(s,".zip");let d=this.adbExtensionsPathBySourceDir.get(e);d||(d=`${n}/${a}.xpi`),b.debug(`Uploading ${a} on the android device`),await t.pushFile(r,s,d),b.debug(`Upload completed: ${d}`),this.adbExtensionsPathBySourceDir.set(e,d)})}async buildAndPushExtensions(){for(const e of this.params.extensions){const{sourceDir:t}=e;await this.buildAndPushExtension(t)}}async adbDiscoveryAndForwardRDPUnixSocket(){const{adbUtils:e,selectedAdbDevice:t,selectedFirefoxApk:r,params:{firefoxAndroidTimeout:n}}=this,i=this.params.stdin||process.stdin,{unixSocketDiscoveryRetryInterval:o}=y;let{unixSocketDiscoveryMaxTime:s}=y;"number"==typeof n&&(s=n);const a=(t,r)=>{r.ctrl&&"c"===r.name&&e.setUserAbortDiscovery(!0)};Object(g.a)(i)&&(u.a.emitKeypressEvents(i),Object(g.b)(i,!0),i.on("keypress",a));try{this.selectedRDPSocketFile=await e.discoverRDPUnixSocket(t,r,{maxDiscoveryTime:s,retryInterval:o})}finally{Object(g.a)(i)&&i.removeListener("keypress",a)}b.debug(`RDP Socket File selected: ${this.selectedRDPSocketFile}`);const c=await this.chooseLocalTcpPort();b.info(`You can connect to this Android device on TCP port ${c}`);const d=this.selectedRDPSocketFile.startsWith("@")?`localabstract:${this.selectedRDPSocketFile.substr(1)}`:`localfilesystem:${this.selectedRDPSocketFile}`;await e.setupForward(t,d,`tcp:${c}`),this.selectedTCPPort=c}chooseLocalTcpPort(){return new Promise(e=>{const t=s.a.createServer();t.listen(0,()=>{const r=t.address().port;t.close(),e(r)})})}async rdpInstallExtensions(){const{selectedTCPPort:e,params:{extensions:t,firefoxClient:r}}=this,n=this.remoteFirefox=await r({port:e});n.client.on("end",()=>{this.exiting||(b.info("Exiting the device because Firefox for Android disconnected"),this.exit())});for(const e of t){const{sourceDir:t}=e,r=this.adbExtensionsPathBySourceDir.get(t);if(!r)throw new p.e(`ADB extension path for "${t}" was unexpectedly empty`);const i=await n.installTemporaryAddon(r).then(e=>e.addon.id);if(!i)throw new p.e("Received an empty addonId from "+`remoteFirefox.installTemporaryAddon("${r}")`);this.reloadableExtensions.set(e.sourceDir,i)}}}i()(y,"unixSocketDiscoveryRetryInterval",3e3),i()(y,"unixSocketDiscoveryMaxTime",18e4)}.call(this,"src/extension-runners/firefox-android.js")},function(e,t,r){"use strict";r.r(t),function(e){r.d(t,"extensionIdFile",function(){return b}),r.d(t,"default",function(){return m}),r.d(t,"getIdFromSourceDir",function(){return w}),r.d(t,"saveIdToSourceDir",function(){return y});var n=r(3),i=r.n(n),o=r(4),s=r(49),a=r.n(s),c=r(14),d=r(6),u=r(27),l=r(0),f=r(24),p=r(2);const h=Object(p.createLogger)(e),g=o.fs.readFile.bind(o.fs),b=".web-extension-id";function m({apiKey:e,apiProxy:t,apiSecret:r,apiUrlPrefix:n,artifactsDir:i,id:o,ignoreFiles:s=[],sourceDir:p,timeout:g,verbose:b,channel:m},{build:x=c.default,preValidatedManifest:v,signAddon:D=a.a}={}){return Object(u.a)(async function(a){let c;await Object(f.a)(i),c=v||await Object(d.a)(p);const[u,P]=await Promise.all([x({sourceDir:p,ignoreFiles:s,artifactsDir:a.path()},{manifestData:c,showReadyMessage:!1}),w(p)]),O=Object(d.b)(c);if(o&&O)throw new l.d(`Cannot set custom ID ${o} because manifest.json `+`declares ID ${O}`);o&&h.debug(`Using custom ID declared as --id=${o}`),O&&(o=O),!o&&P&&(h.info(`Using previously auto-generated extension ID: ${P}`),o=P),o||h.warn("No extension ID specified (it will be auto-generated)");const $=await D({apiKey:e,apiSecret:r,apiUrlPrefix:n,apiProxy:t,timeout:g,verbose:b,id:o,xpiPath:u.extensionPath,version:c.version,downloadDir:i,channel:m});if($.id&&await y(p,$.id),!$.success)throw h.info("FAIL"),new l.e("The extension could not be signed");return h.info(`Extension ID: ${$.id}`),h.info("SUCCESS"),$})}async function w(e,t=g){const r=i.a.join(e,b);let n;try{n=await t(r)}catch(e){if(Object(l.f)("ENOENT",e))return void h.debug(`No ID file found at: ${r}`);throw e}let o=n.toString().split("\n");const s=(o=o.filter(e=>{if((e=e.trim())&&!e.startsWith("#"))return e}))[0];if(h.debug(`Found extension ID ${s} in ${r}`),!s)throw new l.d(`No ID found in extension ID file ${r}`);return s}async function y(e,t){const r=i.a.join(e,b);await o.fs.writeFile(r,["# This file was created by https://github.com/mozilla/web-ext","# Your auto-generated extension ID for addons.mozilla.org is:",t.toString()].join("\n")),h.debug(`Saved auto-generated ID ${t} to ${r}`)}}.call(this,"src/cmd/sign.js")},function(e,t,r){"use strict";r.r(t),function(e){r.d(t,"url",function(){return a}),r.d(t,"default",function(){return c});var n=r(50),i=r.n(n),o=r(2);const s=Object(o.createLogger)(e),a="https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Getting_started_with_web-ext";function c(e,{openUrl:t=i.a}={}){return new Promise((e,r)=>{t(a,t=>{t?(s.debug(`Encountered an error while opening URL ${a}`,t),r(t)):e()})})}}.call(this,"src/cmd/docs.js")}]);
//# sourceMappingURL=web-ext.js.map